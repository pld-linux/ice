--- Ice-3.4.2/py/modules/IcePy/Operation.cpp.orig	2012-11-19 01:04:19.920721630 +0100
+++ Ice-3.4.2/py/modules/IcePy/Operation.cpp	2012-11-19 01:05:20.854052813 +0100
@@ -1872,7 +1872,7 @@
         // IllegalArgumentException can propagate directly.
         // (Raised by checkAsyncTwowayOnly)
         //
-        PyErr_Format(PyExc_RuntimeError, STRCAST(ex.reason().c_str()));
+        PyErr_Format(PyExc_RuntimeError, "%s", STRCAST(ex.reason().c_str()));
         return 0;
     }
     catch(const Ice::Exception&)
@@ -1957,7 +1957,7 @@
     }
     catch(const IceUtil::IllegalArgumentException& ex)
     {
-        PyErr_Format(PyExc_RuntimeError, STRCAST(ex.reason().c_str()));
+        PyErr_Format(PyExc_RuntimeError, "%s", STRCAST(ex.reason().c_str()));
     }
     catch(const Ice::Exception& ex)
     {
@@ -2604,7 +2604,7 @@
     }
     catch(const IceUtil::IllegalArgumentException& ex)
     {
-        PyErr_Format(PyExc_RuntimeError, STRCAST(ex.reason().c_str()));
+        PyErr_Format(PyExc_RuntimeError, "%s", STRCAST(ex.reason().c_str()));
     }
     catch(const Ice::Exception& ex)
     {
--- Ice-3.4.2/rb/src/IceRuby/Operation.cpp~	2011-06-15 21:44:00.000000000 +0200
+++ Ice-3.4.2/rb/src/IceRuby/Operation.cpp	2012-11-19 01:14:40.380699743 +0100
@@ -240,7 +240,7 @@
 
     if(!_deprecateMessage.empty())
     {
-        rb_warning(_deprecateMessage.c_str());
+        rb_warning("%s", _deprecateMessage.c_str());
         _deprecateMessage.clear(); // Only show the warning once.
     }
 
